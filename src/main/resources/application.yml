spring:
  application:
    name: spring-circuitbreaker-demo

management:
  health:
    circuitbreakers.enabled: true
    ratelimiters.enabled: true
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: '*'
  metrics:
    distribution:
      percentiles-histogram.http.server.requests: true
      percentiles-histogram.resilience4j.circuitbreaker.calls: true
    tags:
      application: ${spring.application.name}

resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
  #      recordExceptions:
  #        - org.springframework.web.client.HttpServerErrorException
  #      ignoreExceptions:
  #        - com.rbiedrawa.circuitbreaker.exceptions.RetryableException
    instances:
      sayHello:
        baseConfig: default
  retry:
    configs:
      default:
        maxRetryAttempts: 3
        waitDuration: 100
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
        retryExceptions:
          - java.util.concurrent.TimeoutException
    instances:
      sayHello:
        baseConfig: default

  bulkhead:
    configs:
      default:
        maxConcurrentCalls: 100
  thread-pool-bulkhead:
    configs:
      default:
        maxThreadPoolSize: 4
        coreThreadPoolSize: 2
        queueCapacity: 2

  ratelimiter:
    configs:
      default:
        registerHealthIndicator: false
        limitForPeriod: 10
        limitRefreshPeriod: 1s
        timeoutDuration: 0
        eventConsumerBufferSize: 100

  timelimiter:
    configs:
      default:
        cancelRunningFuture: false
        timeoutDuration: 1s
    instances:
      sayHello:
        baseConfig: default